#pragma once
#include <eosio/testing/tester.hpp>

namespace eosio::testing {

struct contracts {
   static std::vector<uint8_t> system_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/contracts/flon.system/flon.system.wasm"); }
   static std::vector<char>    system_abi() { return read_abi("${CMAKE_BINARY_DIR}/contracts/flon.system/flon.system.abi"); }
   static std::vector<uint8_t> token_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/contracts/flon.token/flon.token.wasm"); }
   static std::vector<char>    token_abi() { return read_abi("${CMAKE_BINARY_DIR}/contracts/flon.token/flon.token.abi"); }
   static std::vector<uint8_t> msig_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/contracts/flon.msig/flon.msig.wasm"); }
   static std::vector<char>    msig_abi() { return read_abi("${CMAKE_BINARY_DIR}/contracts/flon.msig/flon.msig.abi"); }
   static std::vector<uint8_t> wrap_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/contracts/flon.wrap/flon.wrap.wasm"); }
   static std::vector<char>    wrap_abi() { return read_abi("${CMAKE_BINARY_DIR}/contracts/flon.wrap/flon.wrap.abi"); }
   static std::vector<uint8_t> bios_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/contracts/flon.bios/flon.bios.wasm"); }
   static std::vector<char>    bios_abi() { return read_abi("${CMAKE_BINARY_DIR}/contracts/flon.bios/flon.bios.abi"); }
   static std::vector<uint8_t> reward_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/contracts/flon.reward/flon.reward.wasm"); }
   static std::vector<char>    reward_abi() { return read_abi("${CMAKE_BINARY_DIR}/contracts/flon.reward/flon.reward.abi"); }

   struct util {
      static std::vector<uint8_t> reject_all_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/contracts/test_contracts/reject_all/reject_all.wasm"); }
      static std::vector<uint8_t> exchange_wasm() { return read_wasm("${CMAKE_CURRENT_SOURCE_DIR}/test_contracts/exchange.wasm"); }
   };
};

} // namespace eosio::testing

namespace system_contracts::testing::test_contracts {

static std::vector<uint8_t> blockinfo_tester_wasm()
{
   return eosio::testing::read_wasm(
      "${CMAKE_BINARY_DIR}/contracts/test_contracts/blockinfo_tester/blockinfo_tester.wasm");
}

} // namespace system_contracts::testing::test_contracts